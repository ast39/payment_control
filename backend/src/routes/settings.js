const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const authenticateToken = require('../middleware/auth');

const router = express.Router();
const dbPath = path.join(__dirname, '../../payments.db');

// –ó–∞—â–∏—â–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç—ã settings
router.use(authenticateToken);

// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/', (req, res) => {
  const userId = req.user.id;
  const db = new sqlite3.Database(dbPath);

  db.get('SELECT * FROM user_settings WHERE user_id = ?', [userId], (err, settings) => {
    if (err) {
      db.close();
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
      });
    }

    if (!settings) {
      // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
      db.run('INSERT INTO user_settings (user_id, telegram_chat_id, reminder_days) VALUES (?, ?, ?)', 
        [userId, null, 3], function(err) {
        if (err) {
          db.close();
          return res.status(500).json({ 
            error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
          });
        }

              db.close();
      res.json({
        telegram_bot_token: null,
        telegram_chat_id: null,
        reminder_days: 3
      });
      });
    } else {
      db.close();
      res.json({
        telegram_bot_token: settings.telegram_bot_token,
        telegram_chat_id: settings.telegram_chat_id,
        reminder_days: settings.reminder_days
      });
    }
  });
});

// –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.put('/', (req, res) => {
  const userId = req.user.id;
  const { telegram_bot_token, telegram_chat_id, reminder_days } = req.body;

  if (reminder_days && (reminder_days < 1 || reminder_days > 30)) {
    return res.status(400).json({ 
      error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
      message: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 30' 
    });
  }

  const db = new sqlite3.Database(dbPath);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  db.get('SELECT id FROM user_settings WHERE user_id = ?', [userId], (err, settings) => {
    if (err) {
      db.close();
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
      });
    }

    if (settings) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              db.run(`
          UPDATE user_settings 
          SET telegram_bot_token = COALESCE(?, telegram_bot_token),
              telegram_chat_id = COALESCE(?, telegram_chat_id),
              reminder_days = COALESCE(?, reminder_days),
              updated_at = CURRENT_TIMESTAMP
          WHERE user_id = ?
        `, [telegram_bot_token, telegram_chat_id, reminder_days, userId], (err) => {
        if (err) {
          db.close();
          return res.status(500).json({ 
            error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
          });
        }

        db.close();
        res.json({ message: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ' });
      });
    } else {
              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        db.run(`
          INSERT INTO user_settings (user_id, telegram_bot_token, telegram_chat_id, reminder_days)
          VALUES (?, ?, ?, ?)
        `, [userId, telegram_bot_token, telegram_chat_id, reminder_days || 3], (err) => {
        if (err) {
          db.close();
          return res.status(500).json({ 
            error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
          });
        }

        db.close();
        res.json({ message: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ' });
      });
    }
  });
});

// –¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
router.post('/test-telegram', (req, res) => {
  const userId = req.user.id;
  const db = new sqlite3.Database(dbPath);

  db.get('SELECT telegram_bot_token, telegram_chat_id FROM user_settings WHERE user_id = ?', [userId], (err, settings) => {
    if (err) {
      db.close();
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
      });
    }

    if (!settings || !settings.telegram_bot_token || !settings.telegram_chat_id) {
      db.close();
      return res.status(400).json({ 
        error: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
        message: '–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ Chat ID Telegram' 
      });
    }

    // –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const testMessage = `üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π!\n\n‚úÖ –°–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\nüì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.`;
    
    fetch(`https://api.telegram.org/bot${settings.telegram_bot_token}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: settings.telegram_chat_id,
        text: testMessage,
        parse_mode: 'HTML'
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.ok) {
        db.close();
        res.json({ 
          message: '–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ',
          chat_id: settings.telegram_chat_id
        });
      } else {
        db.close();
        res.status(500).json({ 
          error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏',
          message: `Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${data.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
          telegram_error: data
        });
      }
    })
    .catch(error => {
      db.close();
      res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram',
        error_details: error.message
      });
    });
  });
});

// –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
router.post('/run-notifications', (req, res) => {
  const userId = req.user.id;
  const db = new sqlite3.Database(dbPath);

  db.get('SELECT telegram_bot_token, telegram_chat_id, reminder_days FROM user_settings WHERE user_id = ?', [userId], (err, settings) => {
    if (err) {
      db.close();
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' 
      });
    }

    if (!settings || !settings.telegram_bot_token || !settings.telegram_chat_id) {
      db.close();
      return res.status(400).json({ 
        error: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
        message: '–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ Chat ID Telegram' 
      });
    }

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const { checkAndSendNotificationsForUser } = require('../scripts/paymentNotifier');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    checkAndSendNotificationsForUser(userId, settings.telegram_bot_token, settings.telegram_chat_id, settings.reminder_days || 3)
      .then(result => {
        db.close();
        res.json({ 
          message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
          result: result
        });
      })
      .catch(error => {
        db.close();
        res.status(500).json({ 
          error: '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
          message: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–µ–π',
          error_details: error.message
        });
      });
  });
});

module.exports = router;
